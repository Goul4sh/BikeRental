version: '3.8'

services:
  kafka1:
    image: docker.io/bitnami/kafka:3.6
    hostname: kafka1
    container_name: kafka1
    ports:
      - target: 9192
        published: 9192
        protocol: tcp
      - target: 9193
        published: 9193
        protocol: tcp
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_BROKER_RACK=RACK1
      - KAFKA_CFG_PROCESS_ROLES=broker, controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=CONTROLLER://:9193,DOCKER_EXTERNAL://kafka1:9192,DOCKER_INTERNAL://:19192
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,DOCKER_EXTERNAL:PLAINTEXT,DOCKER_INTERNAL:PLAINTEXT
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=DOCKER_EXTERNAL
      - KAFKA_CFG_ADVERTISED_LISTENERS=DOCKER_EXTERNAL://kafka1:9192,DOCKER_INTERNAL://kafka1:19192
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka1:9193,2@kafka2:9293,3@kafka3:9393
      - KAFKA_KRAFT_CLUSTER_ID=Y2I5OWMyMzhhYjNiMTFlZW
      - ALLOW_PLAINTEXT_LISTENER=yes
    volumes:
      - kafka1_data:/bitnami/kafka
    networks:
      - kafkanet

  kafka2:
    image: docker.io/bitnami/kafka:3.6
    hostname: kafka2
    container_name: kafka2
    ports:
      - target: 9292
        published: 9292
        protocol: tcp
      - target: 9293
        published: 9293
        protocol: tcp
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_NODE_ID=2
      - KAFKA_CFG_BROKER_RACK=RACK1
      - KAFKA_CFG_PROCESS_ROLES=broker, controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=CONTROLLER://:9293,DOCKER_EXTERNAL://kafka2:9292,DOCKER_INTERNAL://:19292
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,DOCKER_EXTERNAL:PLAINTEXT,DOCKER_INTERNAL:PLAINTEXT
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=DOCKER_EXTERNAL
      - KAFKA_CFG_ADVERTISED_LISTENERS=DOCKER_EXTERNAL://kafka2:9292,DOCKER_INTERNAL://kafka2:19292
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka1:9193,2@kafka2:9293,3@kafka3:9393
      - KAFKA_KRAFT_CLUSTER_ID=Y2I5OWMyMzhhYjNiMTFlZW
      - ALLOW_PLAINTEXT_LISTENER=yes
    volumes:
      - kafka2_data:/bitnami/kafka
    networks:
      - kafkanet

  kafka3:
    image: docker.io/bitnami/kafka:3.6
    hostname: kafka3
    container_name: kafka3
    ports:
      - target: 9392
        published: 9392
        protocol: tcp
      - target: 9393
        published: 9393
        protocol: tcp
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_NODE_ID=3
      - KAFKA_CFG_BROKER_RACK=RACK1
      - KAFKA_CFG_PROCESS_ROLES=broker, controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=CONTROLLER://:9393,DOCKER_EXTERNAL://kafka3:9392,DOCKER_INTERNAL://:19392
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,DOCKER_EXTERNAL:PLAINTEXT,DOCKER_INTERNAL:PLAINTEXT
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=DOCKER_EXTERNAL
      - KAFKA_CFG_ADVERTISED_LISTENERS=DOCKER_EXTERNAL://kafka3:9392,DOCKER_INTERNAL://kafka3:19392
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka1:9193,2@kafka2:9293,3@kafka3:9393
      - KAFKA_KRAFT_CLUSTER_ID=Y2I5OWMyMzhhYjNiMTFlZW
      - ALLOW_PLAINTEXT_LISTENER=yes
    volumes:
      - kafka3_data:/bitnami/kafka
    networks:
      - kafkanet

  mongo_cons_1:
    build: .
    image: mongocustom:7.0.2
    container_name: mongodb_consumer_1
    hostname: mongodb_consumer_1
    networks:
      - mongonet_consumer
    ports:
      - "27117:27117"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=adminpassword
      - MONGO_INITDB_DATABASE=rentabike
    command: --config /etc/mongod.conf --port 27117
    healthcheck:
      test: [ "CMD", "mongosh", "--port", "27117", "--eval", "db.adminCommand('ping')" ]
      interval: 10s
      timeout: 2s
      retries: 5

  mongo_cons_2:
      #    build: .
      image: mongocustom:7.0.2
      container_name: mongodb_consumer_2
      hostname: mongodb_consumer_2
      networks:
        - mongonet_consumer
      ports:
        - "27118:27118"
      environment:
        - MONGO_INITDB_ROOT_USERNAME=admin
        - MONGO_INITDB_ROOT_PASSWORD=adminpassword
        - MONGO_INITDB_DATABASE=rentabike
      command: --config /etc/mongod.conf --port 27118
      healthcheck:
        test: [ "CMD", "mongosh", "--port", "27118", "--eval", "db.adminCommand('ping')" ]
        interval: 10s
        timeout: 2s
        retries: 5

  mongo_cons_3:
      #    build: .
      image: mongocustom:7.0.2
      container_name: mongodb_consumer_3
      hostname: mongodb_consumer_3
      networks:
        - mongonet_consumer
      ports:
        - "27119:27119"
      environment:
        - MONGO_INITDB_ROOT_USERNAME=admin
        - MONGO_INITDB_ROOT_PASSWORD=adminpassword
        - MONGO_INITDB_DATABASE=rentabike
      command: --config /etc/mongod.conf --port 27119
      healthcheck:
        test: [ "CMD", "mongosh", "--port", "27119", "--eval", "db.adminCommand('ping')" ]
        interval: 10s
        timeout: 2s
        retries: 5

  mongoinit_consumer:
      #    build: .
      image: mongocustom:7.0.2
      container_name: mongodbinit_consumer
      hostname: mongodbinit_consumer
      depends_on:
        mongo_cons_1:
          condition: service_healthy
        mongo_cons_2:
          condition: service_healthy
        mongo_cons_3:
          condition: service_healthy
      networks:
        - mongonet_consumer
      command: >
        mongosh --host mongodb_consumer_1:27117 --username admin --password adminpassword --authenticationDatabase admin --eval "
          rs.initiate(
            {
              _id: 'replica_set_single',
              members: [
                { _id: 0, host: 'mongodb_consumer_1:27117' },
                { _id: 1, host: 'mongodb_consumer_2:27118' },
                { _id: 2, host: 'mongodb_consumer_3:27119' }
              ]
            }
          );
        "

volumes:
  kafka1_data:
    driver: local
  kafka2_data:
    driver: local
  kafka3_data:
    driver: local
  mongo-consumer-data:
    driver: local

networks:
  mongonet_consumer:
    driver: bridge
  kafkanet:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.25.0.0/16